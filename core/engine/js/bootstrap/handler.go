
 /*
  * This file generated by `build.js` script
  */
 
package bootstrap
 
import (
  "github.com/robertkrimen/otto/ast"
  "github.com/robertkrimen/otto/parser"
)
 
// HandlerBootstrapProgram :
var HandlerBootstrapProgram *ast.Program
 
func init() {
  HandlerBootstrapProgram, _ = parser.ParseFile(nil, "", handlerBootstrapJS, 0)
}
 
var handlerBootstrapJS string = `
  request.body.json = (function () {
  textFunction = request.body.text;
  return function () {
    return JSON.parse(textFunction());
  };
})();

request.body.read = (function () {
  var sent = false;
  return function () {
    if (sent) return undefined;
    sent = true;
    return request.body.text();
  };
})();
response.send = (function () {
  function send(value) {
    if (typeof value === "string") {
      response.setHeader("Content-Type", "text/html");
      response.write(value);
    } else {
      response.setHeader("Content-Type", "application/json");
      var v = JSON.stringify(value);
      response.write(v);
    }
  }
  return send;
})();

var __reponse__status = response.status;

response.status = function () {
  function status(status) {
    __reponse__status(status);
    return response;
  }
  return status;
};

response.writeln = function (msg) {
  response.write(msg + "\n");
};

response.redirect = (function () {
  var redirectFunc = response.__redirect;
  return function (url, code) {
    var code = code || 200;
    redirectFunc(url, code);
  };
})();

`
  
